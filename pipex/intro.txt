
FUNCIONES A ESTUDIAR !
open, close, read, write,
malloc, free, perror,
strerror, access, dup, dup2,
execve, exit, fork, pip

PARTE EXTRA !
- Gestionar múltiples pipes
- Aceptar << y >> cuando el primer parámetro es “here_doc”



end[1] is the child process, and end[0] the parent process: the child writes, 
while the parent reads. And since for something to be read, it must be written 
first, so cmd1 will be executed by the child, and cmd2 by the parent.

For the child process, we want infile to be our stdin (we want it as input), and end[1] 
to be our stdout (we want to write to end[1] the output of cmd1).
In the parent process, we want end[0] to be our stdin (end[0] reads from end[1] the 
output of cmd1), and outfile to be our stdout (we want to write to it the output of cmd2).

However, in the bonus part this should be mantained between cmds until que output is found. 
